##################################################################################################
# 
# CMake script for finding Octomap.
# 
# Input variables:
# 
# - Octomap_ROOT_DIR (optional): When specified, header files and libraries will be searched for in
#     ${Octomap_ROOT_DIR}/include
#     ${Octomap_ROOT_DIR}/libs
#   respectively, and the default CMake search order will be ignored. When unspecified, the default
#   CMake search order is used.
#   This variable can be specified either as a CMake or environment variable. If both are set,
#   preference is given to the CMake variable.
#   Use this variable for finding packages installed in a nonstandard location, or for enforcing
#   that one of multiple package installations is picked up.
# 
# 
# Cache variables (not intended to be used in CMakeLists.txt files)
# 
# - Octomap_INCLUDE_DIR: Absolute path to package headers.
# - Octomap_LIBRARY: Absolute path to library.
# 
# 
# Output variables:
# 
# - Octomap_FOUND: Boolean that indicates if the package was found
# - Otomap_INCLUDE_DIRS: Paths to the necessary header files
# - Octomap_LIBRARIES: Package libraries
# 
# 
# Example usage:
# 
#  find_package(Octomap)
#  if(NOT Octomap_FOUND)
#    # Error handling
#  endif()
#  ...
#  include_directories(${Octomap_INCLUDE_DIRS} ...)
#  ...
#  target_link_libraries(my_target ${Octomap_LIBRARIES})
# 
##################################################################################################

# Get package location hint from environment variable (if any)
if(NOT Octomap_ROOT_DIR AND DEFINED ENV{Octomap_ROOT_DIR})
  set(Octomap_ROOT_DIR "$ENV{Octomap_ROOT_DIR}" CACHE PATH
      "Octomap base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations
if(Octomap_ROOT_DIR)
  set(Octomap_INCLUDE_PATH PATHS "${Octomap_ROOT_DIR}/include" NO_DEFAULT_PATH)
  set(Octomap_LIBRARY_PATH PATHS "${Octomap_ROOT_DIR}/lib"     NO_DEFAULT_PATH)
endif()

# Find headers and libraries
find_path(Octomap_INCLUDE_DIR NAMES octomap.h PATH_SUFFIXES "octomap" ${Octomap_INCLUDE_PATH})
find_library(Octomap_LIBRARY  NAMES octomap   PATH_SUFFIXES "octomap" ${Octomap_LIBRARY_PATH})

mark_as_advanced(Octomap_INCLUDE_DIR
                 Octomap_LIBRARY)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(octomap DEFAULT_MSG Octomap_LIBRARY
                                                      Octomap_INCLUDE_DIR)

set(Octomap_FOUND ${OCTOMAP_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
#unset(OCTOMAP_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(Octomap_FOUND)
  set(OCTOMAP_INCLUDE_DIRS ${Octomap_INCLUDE_DIR})
  set(OCTOMAP_LIBRARIES ${Octomap_LIBRARY})
endif()
